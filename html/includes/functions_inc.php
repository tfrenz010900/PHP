<?phpob_start();//error_reporting(E_ALL);//ini_set('display_errors', 1);session_start(); global $TLD,$CLD,$ip_add,$host,$username,$password,$database,$bypasslogin,$cloud_site,$leddriverscript_file,$ledintensity,$nopitch_file; global $superuser,$superpass,$totalleds,$ledmatrix,$ledpickupfile_loc,$showpixelcelltxt,$matrixrefreshrate,$speedcolor,$speed_file,$home_dir; global $cam1_file_string,$cam2_file_string,$impact_file_string,$analysis_script; global $currentSession;  //Domains  $TLD = 'http://10.0.0.200';  $CLD = "http://".$_SERVER['HTTP_HOST'];  $ip_add = "10.0.0.200";  $cloud_site = 'http://www.easy-insight.com';  //Database  $host = ($_SERVER['HTTP_HOST'] == 'smartmitt.localhost') ? '10.0.0.200' : 'localhost';  $username = 'smartmitt';  $password = 'smartmitt';  $database = 'smartmitt';  //Super User Credentials  $superuser = "admin@smartmitt.com";  $superpass = md5("smartmitt");  //Application Constatns  $showpixelcelltxt = true;  $totalleds = 779; //0 based index  $matrixrefreshrate = 10000; //milliseconds to repaint LED matrix  $speedcolor = 'f00000'; //f00000,00f000,0000f0  $ledintensity = 'f'; //0-9,f=full  $home_dir = '/home/pi/';  $ledpickupfile_loc = ($_SERVER['HTTP_HOST'] == 'smartmitt.localhost') ? $_SERVER['DOCUMENT_ROOT'].$home_dir.'input.txt' : $home_dir.'input.txt';  $leddriverscript_file = $home_dir.'artdmx_script.py';  $speed_file = $home_dir.'speed.txt';  $nopitch_file = $home_dir.'NOPITCH.txt';  $cam1_file_string = 'Cam1';  $cam2_file_string = 'Cam2';  $analysis_script = $home_dir.'analysis_script.py';  $impact_file_string = 'impact';  $leddriverscript_loc = '/usr/bin/python '.$leddriverscript_file.' 10.0.0.100:6454 --rgb-file '.$home_dir.'input.txt --log-file '.$home_dir.'log.txt';  //Unix User ssh/gui  //pi,12345//Call Valid Function$issystemvalid =  IsValidSession();function IsValidSession() { global $bypasslogin;  $processvalidation = (isset($bypasslogin)) ? true : false;  if (!$processvalidation){    if(isset($_COOKIE['user'])) { //Check for cookie spoofs, active application      if (decrypt($_COOKIE['user'],$_COOKIE['isvalid']) === false) {          header("Location: /?result=Invalid+Credentials");      }    } else { //Missing/Expired Cookie       header("Location: /?result=Invalid+Credentials");    }  }   return true;}function encrypt($text) {   return password_hash($text, PASSWORD_DEFAULT);}function decrypt($text,$hash) {   return password_verify($text, $hash);}function IsSuperAdmin() { global $superpass; if (!empty($_COOKIE['AccountID'])) {  if($_COOKIE['AccountID'] == 'smartmitt') {   return true;  } else {   return false;  } } else {   return false; }}function Getrecid() { if (!empty($_COOKIE['recid'])) {   $outval = $_COOKIE['recid']; } else {   $outval = 0; }  return $outval;}function GetAccountID() { if (!empty($_COOKIE['AccountID'])) {   $outval = $_COOKIE['AccountID']; } else {   $outval = "Unkown"; }  return $outval;}function GetStudentFirst() { if (!empty($_COOKIE['StudentFirst'])) {   $outval = $_COOKIE['StudentFirst']; } else {   $outval = "Unkown"; }  return $outval;}function GetStudentLast() { if (!empty($_COOKIE['StudentLast'])) {   $outval = $_COOKIE['StudentLast']; } else {   $outval = "Unkown"; }  return $outval;}function GetStudentNickname() { if (!empty($_COOKIE['StudentNickname'])) {   $outval = $_COOKIE['StudentNickname']; } else {   $outval = "Unkown"; }  return $outval;}function GetStudentEmail() { if (!empty($_COOKIE['StudentEmail'])) {   $outval = $_COOKIE['StudentEmail']; } else {   $outval = "Unkown"; }  return $outval;}function GetStudentPichRecs($AccountID) {  $db = ConnecttoDB();   $sql = "SELECT * FROM features_master ORDER BY name ASC;";   $sqlQuery = $db->query($sql);   $result = $sqlQuery->fetchAll();  return $result;}function Locatefile($dir,$filenampart) {  foreach($dir as $file) {    $name = pathinfo($file, PATHINFO_FILENAME);    if(strpos(strtolower($name), strtolower($filenampart))) {      return $file;    }  }  return 'none';}function LogLogin($AccountID,$StudentEmail,$StudentFirst,$StudentLast,$ip_address) {  $db = ConnecttoDB();  try {     $sql = "INSERT INTO logins (AccountID,StudentEmail,StudentFirst,StudentLast,ip_address) VALUES (:AccountID,:StudentEmail,:StudentFirst,:StudentLast,:ip_address)";     $q = $db->prepare($sql);     $q->execute(array(':AccountID'=>$AccountID,':StudentEmail'=>$StudentEmail,':StudentFirst'=>$StudentFirst,':StudentLast'=>$StudentLast,':ip_address'=>$ip_address));     $lastId = $db->lastInsertId();   } catch(PDOException $ex) {    $lastId = "error";   }    return $lastId;}function ping($host) {  exec(sprintf('ping -c 1 -W 5 %s', escapeshellarg($host)), $res, $rval);    return $rval === 0;}function get_http_response_code($host) {    $headers = get_headers($host);    $rtncode = (int)substr($headers[0], 9, 3);    return ($rtncode == 200) ? true : false;}function is_connectable(string $host, int $port=80, int $timeout=3){    if($fp = @fsockopen($host, $port, $errno, $errstr, $timeout)){        return fclose($fp) || true;    }    return false;}function EasyInsightsUser($studentemail = '') {   $emailfilter = (empty($studentemail)) ? '' : '?StudentEmail='.$studentemail;   //$auth = base64_encode("CvFEXgmPXnweNZsomBiD:knJwDJjedPHfONhycQDi");   $auth = "Q3ZGRVhnbVBYbndlTlpzb21CaUQ6a25Kd0RKamVkUEhmT05oeWNRRGk=";   $opts = array('http' =>array('header'  => "Authorization: Basic ".$auth));   $context  = stream_context_create($opts);   $result = file_get_contents('https://www.easy-insight.com/app/reports/MBXGZApSwiCEKayGLfGS/basic.json'.$emailfilter, false, $context);  return $result;}	// get cooch id from student idfunction EasyInsightsUser_Coach($account_id = '') {   $account_id = (empty($account_id)) ? '' : '?AccountID='.$account_id;   //$auth = base64_encode("CvFEXgmPXnweNZsomBiD:knJwDJjedPHfONhycQDi");   $auth = "Q3ZGRVhnbVBYbndlTlpzb21CaUQ6a25Kd0RKamVkUEhmT05oeWNRRGk=";   $opts = array('http' =>array('header'  => "Authorization: Basic ".$auth));   $context  = stream_context_create($opts);   $result = file_get_contents('https://www.easy-insight.com/app/reports/cAUAcRcfCRrSlAzvnhkG/basic.json'.$account_id, false, $context);  return $result;}function EasyInsightsUploadPitches($pitchJson) {   //$auth = base64_encode("CvFEXgmPXnweNZsomBiD:knJwDJjedPHfONhycQDi");   $auth = "Q3ZGRVhnbVBYbndlTlpzb21CaUQ6a25Kd0RKamVkUEhmT05oeWNRRGk=";   $opts = array('http' =>array('header'  => "Authorization: Basic ".$auth, 'header'  => "Content-Type: application/json", 'header'  => "Accept: application/json", 'content'  => $pitchJson));   $context  = stream_context_create($opts);   $result = file_get_contents('https://www.easy-insight.com/app/dataSources/QMRFgHQsBRJl/updateRows.json'.$emailfilter, false, $context);  return $result;}function ConnecttoDB() {  global $host, $username, $password, $database;   try {    $db = new PDO('mysql:host='.$host.';dbname='.$database.';charset=utf8', $username, $password, array(PDO::ATTR_PERSISTENT => false, PDO::MYSQL_ATTR_INIT_COMMAND => 'SET sql_mode="TRADITIONAL"', PDO::MYSQL_ATTR_FOUND_ROWS => true));    $db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);   } catch(PDOException $ex) {     echo($ex->getMessage());     exit();   }   return $db;}  function CallPython($ScriptName){    //$command = escapeshellcmd("python " . $_SERVER['DOCUMENT_ROOT'] . "/scripts/" . $ScriptName);    // $command = escapeshellcmd("python /home/pi/" . $ScriptName);         echo "Calling SmMain.py ";    //  $command = escapeshellcmd("sudo python /home/pi/SmMain.py");  shell_exec("sudo python /home/pi/SmMain.py");         echo "Called SmMain ";//$command = escapeshellcmd("python /var/www/html/scripts/whatever.py 2");//$output = exec($command);$output = shell_exec($command);    return $output;  }function BeginSession($AccountID, $WasOverride, $SessionType, $TargetGUID) {  $db = ConnecttoDB();  try {     $sql = "INSERT INTO sessions ($AccountID, $WasOverride, $CreatedAt, $UpdatedAt, Status, $SessionType, $TargetGUID) VALUES (:AccountID, :WasOverride, time(), time(), 'Open', SessionType, TargetGUID)";     $q = $db->prepare($sql);     $q->execute(array(':AccountID'=>$AccountID,':Action'=>$Action));     $lastId = $db->lastInsertId();   } catch(PDOException $ex) {    $lastId = "error";   }    return $lastId;}function BeginSessionnew($post) {/*echo "<pre>";  print_r($post); exit();*/  $db = ConnecttoDB();    if($post['river_target'] == 'on'){ $river_target = 'Y'; }else{ $river_target = 'N'; }    if($post['pitch_count'] == 'on'){ $pitch_count = 'Y'; }else{ $pitch_count = 'N'; }    if($post['piching_distance'] == 'on'){ $piching_distance = 'Y'; }else{ $piching_distance = 'N'; }    $distance = $post['piching_distance'];    $guid = $post['guid'];    try {     $distance = $post['piching_distance'];  $practiceTarget = $post['practiceTarget'];$PracticeRepetitions = $post['PracticeRepetitions'];    $pitch_count = $post['pitch_count'];    if($pitch_count == '') {      $pitch_count = 'Y';    }     $suspend_session = $post['suspend_session'];   $speed = $post['speed'];   $release_speed = $post['release_speed'];   $play_speed = $post['play_speed'];   $sucess_miss = $post['sucess_miss'];    $impact_location = $post['impact_location'];         $AccountID = $_COOKIE["AccountID"];        //exit();        $sql1 = "SELECT SeqSessionNumber FROM sessions ORDER BY SeqSessionNumber DESC LIMIT 1";    $sqlQuery = $db->query($sql1);    $result = $sqlQuery->fetchAll();    $last_squ_ID = $result['0']['SeqSessionNumber']+1;    $sql2 = "SELECT * FROM LocalUsers where AccountID='$AccountID' LIMIT 1";    $sqlQuery1 = $db->query($sql2);    $result1 = $sqlQuery1->fetchAll();   $StudentNickname = $result1['0']['StudentNickname'];  $Sport = $result1['0']['Sport'];        //exit();    $connected = @fsockopen("www.example.com", 80);                                         //website, port  (try 80 or 443)    if ($connected){        $is_conn = true; //action when connected        $net_status = "Y";        fclose($connected);    }else{        $is_conn = false; //action in connection failure        $net_status = "N";    }     $ReleaseSpeedAddon = $_COOKIE["ReleaseSpeedAddon"];//$net_status = "N";    $current_date = date("Y-m-d H:i:s");    $LastDisplayRiverYN = 'Y'; $q = $db->prepare("INSERT INTO sessions (id, MachineID, AccountID, SeqSessionNumber, Status, SessionType, StandardTargetGUID, PracticeGUID, GameLineUpGUID, ArcadeGUID, BallType, DisplaySpeedForSeconds, DisplayImpactForSeconds, SuspendTimeOutSeconds, DisplayRiverYN, DisplayPitchCountBarsYN, YverticalOffsetDeltaValue, PitchingDistanceFeet, SystemOnLineYN,StudentDisplayName, CreateDtm, LastBackEndPingDtm, LastFrontEndPingDtm, SessionEndedDtm, SessionUploadedDtm,PracticeRepetitions,TimetoshowPlaySpeed,TimetoshowReleaseSpeed,ShowSuccessOrMiss) VALUES (NULL, 'SM990005', '$AccountID', '$last_squ_ID', 'Open', 'standard', '$guid', NULL, NULL, NULL, '$Sport', '$speed', '$impact_location', '$suspend_session', 'Y', '$pitch_count', NULL, '$distance', '$net_status','$StudentNickname','$current_date', NULL, NULL, NULL, NULL,NULL,'$play_speed','$release_speed','$sucess_miss')");     $q->execute();    $lastId = $db->lastInsertId();    $q1 = $db->prepare("UPDATE LocalUsers set CreateDtm=?,LastSynchFromEasyInsightDtm=?,LastUpdateDtm=?,LastSpeedDisplayTimeSecs=?,LastImpactDisplayTimeSecs=?,LastDisplayRiverYN=?,LastDisplayPitchCountBarsOnLedYN=?,PitchingDistanceFeet=? WHERE AccountID=?");    $q1->execute(array($current_date,$current_date,$current_date,$speed,$impact_location,$LastDisplayRiverYN,$pitch_count,$distance,$AccountID));    }     catch(PDOException $ex) {        $lastId = "error";    }    return $last_squ_ID;}function BeginSessionnewPractice($post) {    $db = ConnecttoDB();    //if($post['river_target'] == 'on'){ $river_target = 'Y'; }else{ $river_target = 'N'; }    if($post['pitch_count'] == 'on'){ $pitch_count = 'Y'; }else{ $pitch_count = 'N'; }    if($post['piching_distance'] == 'on'){ $piching_distance = 'Y'; }else{ $piching_distance = 'N'; }    try {   $distance = $post['piching_distance'];    $practiceTarget = $post['practiceTarget'];$PracticeRepetitions = $post['PracticeRepetitions'];    $pitch_count = $post['pitch_count'];    if($pitch_count == '') {      $pitch_count = 'Y';    }     $suspend_session = $post['suspend_session'];       $speed = $post['speed'];   $release_speed = $post['release_speed'];   $play_speed = $post['play_speed'];   $sucess_miss = $post['sucess_miss'];    $impact_location = $post['impact_location'];     $AccountID = $_COOKIE["AccountID"];        //$AccountID = 'A100034';    $sql1 = "SELECT SeqSessionNumber FROM sessions ORDER BY SeqSessionNumber DESC LIMIT 1";    $sqlQuery = $db->query($sql1);    $result = $sqlQuery->fetchAll();    $last_squ_ID = $result['0']['SeqSessionNumber']+1;    $sql2 = "SELECT * FROM LocalUsers where AccountID='$AccountID' LIMIT 1";    $sqlQuery1 = $db->query($sql2);    $result1 = $sqlQuery1->fetchAll();   $StudentNickname = $result1['0']['StudentNickname'];   $ReleaseSpeedAddon = $_COOKIE["ReleaseSpeedAddon"];  $Sport = $result1['0']['Sport'];    $connected = @fsockopen("www.example.com", 80);                                         //website, port  (try 80 or 443)    if ($connected){        $is_conn = true; //action when connected        $net_status = "Y";        fclose($connected);    }else{        $is_conn = false; //action in connection failure        $net_status = "N";    }    $current_date = date("Y-m-d H:i:s");    // update into localuser table    $LastDisplayRiverYN = 'Y';     $q = $db->prepare("INSERT INTO sessions (id, MachineID, AccountID, SeqSessionNumber, Status, SessionType, StandardTargetGUID, PracticeGUID, GameLineUpGUID, ArcadeGUID, BallType, DisplaySpeedForSeconds, DisplayImpactForSeconds, SuspendTimeOutSeconds, DisplayRiverYN, DisplayPitchCountBarsYN, YverticalOffsetDeltaValue, PitchingDistanceFeet, SystemOnLineYN, StudentDisplayName, CreateDtm, LastBackEndPingDtm, LastFrontEndPingDtm, SessionEndedDtm, SessionUploadedDtm, PracticeRepetitions,TimetoshowPlaySpeed,TimetoshowReleaseSpeed,ShowSuccessOrMiss) VALUES (NULL, 'SM990005', '$AccountID', '$last_squ_ID', 'Open', 'practice', NULL, '$practiceTarget', NULL, NULL, '$Sport', '$speed', '$impact_location', '$suspend_session', 'Y', '$pitch_count', NULL, '$distance', '$net_status', '$StudentNickname', '$current_date', NULL, NULL, NULL, NULL, '$PracticeRepetitions','$play_speed','$release_speed','$sucess_miss')");     $q->execute();    $lastId = $db->lastInsertId();    /*$q1 = $db->prepare("UPDATE LocalUsers set CreateDtm=?,LastSynchFromEasyInsightDtm=?,LastUpdateDtm=?,LastSpeedDisplayTimeSecs=?,LastImpactDisplayTimeSecs=?,LastDisplayRiverYN=?,PitchingDistanceFeet=?, WHERE AccountID=?");    $q1->execute(array($current_date,$current_date,$current_date,$speed,$impact_location,$LastDisplayRiverYN,$distance,$AccountID));*/    $q1 = $db->prepare("UPDATE LocalUsers set CreateDtm=?,LastSynchFromEasyInsightDtm=?,LastUpdateDtm=?,LastSpeedDisplayTimeSecs=?,LastImpactDisplayTimeSecs=?,LastDisplayRiverYN=?,LastDisplayPitchCountBarsOnLedYN=?,PitchingDistanceFeet=? WHERE AccountID=?");    $q1->execute(array($current_date,$current_date,$current_date,$speed,$impact_location,$LastDisplayRiverYN,$pitch_count,$distance,$AccountID));    }     catch(PDOException $ex) {        $lastId = "error";    }    return $last_squ_ID;}?>